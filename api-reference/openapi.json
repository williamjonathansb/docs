{
  "openapi": "3.1.0",
  "info": {
    "title": "API Specification for Sprint 1",
    "description": "This is the API documentation for the endpoints defined in the Sprint 1 collection.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "{{baseurl}}/api/v1"
    }
  ],
  "components": {
    "schemas": {
      "ResponseData": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          }
        },
        "required": [
          "data"
        ]
      },
      "Seller": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "cid": {
            "type": "integer"
          },
          "company_name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          }
        },
        "required": [
          "cid",
          "company_name",
          "address",
          "telephone"
        ]
      },
      "Warehouse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "address": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          },
          "warehouse_code": {
            "type": "string"
          },
          "minimum_capacity": {
            "type": "integer"
          },
          "minimum_temperature": {
            "type": "integer"
          }
        },
        "required": [
          "address",
          "telephone",
          "warehouse_code",
          "minimum_capacity",
          "minimum_temperature",
          "id"
        ]
      },
      "Section": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "section_number": {
            "type": "integer"
          },
          "current_temperature": {
            "type": "integer"
          },
          "minimum_temperature": {
            "type": "integer"
          },
          "current_capacity": {
            "type": "integer"
          },
          "minimum_capacity": {
            "type": "integer"
          },
          "maximum_capacity": {
            "type": "integer"
          },
          "warehouse_id": {
            "type": "integer"
          },
          "product_type_id": {
            "type": "integer"
          }
        },
        "required": [
          "section_number",
          "current_temperature",
          "minimum_temperature",
          "current_capacity",
          "minimum_capacity",
          "maximum_capacity",
          "warehouse_id",
          "product_type_id"
        ]
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "expiration_rate": {
            "type": "integer"
          },
          "freezing_rate": {
            "type": "integer"
          },
          "height": {
            "type": "number"
          },
          "length": {
            "type": "number"
          },
          "netweight": {
            "type": "number"
          },
          "product_code": {
            "type": "string"
          },
          "recommended_freezing_temperature": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "product_type_id": {
            "type": "integer"
          },
          "seller_id": {
            "type": "integer"
          }
        },
        "required": [
          "description",
          "expiration_rate",
          "freezing_rate",
          "height",
          "length",
          "netweight",
          "product_code",
          "recommended_freezing_temperature",
          "width",
          "product_type_id",
          "seller_id"
        ]
      },
      "Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "card_number_id": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "warehouse_id": {
            "type": "integer"
          }
        },
        "required": [
          "card_number_id",
          "first_name",
          "last_name",
          "warehouse_id"
        ]
      },
      "Buyer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "card_number_id": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          }
        },
        "required": [
          "card_number_id",
          "first_name",
          "last_name"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "validation_errors": {
            "type": "object"
          }
        },
        "required": [
          "message",
          "validation_errors"
        ]
      }
    }
  },
  "paths": {
    "/sellers": {
      "get": {
        "summary": "Get all sellers",
        "responses": {
          "200": {
            "description": "A list of sellers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Seller"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new seller",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cid": {
                    "type": "integer"
                  },
                  "company_name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "telephone": {
                    "type": "string"
                  }
                },
                "required": [
                  "cid",
                  "company_name",
                  "address",
                  "telephone"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Seller created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Seller"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sellers/{id}": {
      "get": {
        "summary": "Get a seller by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Seller details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Seller"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Seller not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a seller by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Seller deleted",
            "content": {}
          },
          "404": {
            "description": "Seller not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Partially update a seller by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cid": {
                    "type": "integer"
                  },
                  "company_name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "telephone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Seller updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Seller"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Seller not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/warehouses": {
      "get": {
        "summary": "Get all warehouses",
        "responses": {
          "200": {
            "description": "A list of warehouses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Warehouse"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new warehouse",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "telephone": {
                    "type": "string"
                  },
                  "warehouse_code": {
                    "type": "string"
                  },
                  "minimum_capacity": {
                    "type": "integer"
                  },
                  "minimum_temperature": {
                    "type": "integer"
                  }
                },
                "required": [
                  "address",
                  "telephone",
                  "warehouse_code",
                  "minimum_capacity",
                  "minimum_temperature"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Warehouse created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Warehouse"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/warehouses/{id}": {
      "get": {
        "summary": "Get a warehouse by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Warehouse details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Warehouse"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Warehouse not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a warehouse by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Warehouse deleted",
            "content": {}
          },
          "404": {
            "description": "Warehouse not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Partially update a warehouse by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "telephone": {
                    "type": "string"
                  },
                  "warehouse_code": {
                    "type": "string"
                  },
                  "minimum_capacity": {
                    "type": "integer"
                  },
                  "minimum_temperature": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Warehouse updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Warehouse"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Warehouse not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sections": {
      "get": {
        "summary": "Get all sections",
        "responses": {
          "200": {
            "description": "A list of sections",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Section"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new section",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "section_number": {
                    "type": "integer"
                  },
                  "current_temperature": {
                    "type": "integer"
                  },
                  "minimum_temperature": {
                    "type": "integer"
                  },
                  "current_capacity": {
                    "type": "integer"
                  },
                  "minimum_capacity": {
                    "type": "integer"
                  },
                  "maximum_capacity": {
                    "type": "integer"
                  },
                  "warehouse_id": {
                    "type": "integer"
                  },
                  "product_type_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "section_number",
                  "current_temperature",
                  "minimum_temperature",
                  "current_capacity",
                  "minimum_capacity",
                  "maximum_capacity",
                  "warehouse_id",
                  "product_type_id"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Section created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Section"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sections/{id}": {
      "get": {
        "summary": "Get a section by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Section details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Section"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Section not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a section by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Section deleted",
            "content": {}
          },
          "404": {
            "description": "Section not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Partially update a section by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "section_number": {
                    "type": "integer"
                  },
                  "current_temperature": {
                    "type": "integer"
                  },
                  "minimum_temperature": {
                    "type": "integer"
                  },
                  "current_capacity": {
                    "type": "integer"
                  },
                  "minimum_capacity": {
                    "type": "integer"
                  },
                  "maximum_capacity": {
                    "type": "integer"
                  },
                  "warehouse_id": {
                    "type": "integer"
                  },
                  "product_type_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Section updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Section"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Section not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sections/reportProducts": {
      "get": {
        "summary": "Get products report by section",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The ID's of the section to generate the report for"
          }
        ],
        "responses": {
          "200": {
            "description": "Products report for the specified section",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "section_id": {
                      "type": "integer"
                    },
                    "section_number": {
                      "type": "integer"
                    },
                    "products_count": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "section_id",
                    "section_number",
                    "products_count"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Section not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Get all products",
        "responses": {
          "200": {
            "description": "A list of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "expiration_rate": {
                    "type": "integer"
                  },
                  "freezing_rate": {
                    "type": "integer"
                  },
                  "height": {
                    "type": "number"
                  },
                  "length": {
                    "type": "number"
                  },
                  "netweight": {
                    "type": "number"
                  },
                  "product_code": {
                    "type": "string"
                  },
                  "recommended_freezing_temperature": {
                    "type": "number"
                  },
                  "width": {
                    "type": "number"
                  },
                  "product_type_id": {
                    "type": "integer"
                  },
                  "seller_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "description",
                  "expiration_rate",
                  "freezing_rate",
                  "height",
                  "length",
                  "netweight",
                  "product_code",
                  "recommended_freezing_temperature",
                  "width",
                  "product_type_id",
                  "seller_id"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted",
            "content": {}
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Partially update a product by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "description": {
                    "type": "string"
                  },
                  "expiration_rate": {
                    "type": "integer"
                  },
                  "freezing_rate": {
                    "type": "integer"
                  },
                  "height": {
                    "type": "number"
                  },
                  "length": {
                    "type": "number"
                  },
                  "netweight": {
                    "type": "number"
                  },
                  "product_code": {
                    "type": "string"
                  },
                  "recommended_freezing_temperature": {
                    "type": "number"
                  },
                  "width": {
                    "type": "number"
                  },
                  "product_type_id": {
                    "type": "integer"
                  },
                  "seller_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/products/reportRecords": {
      "get": {
        "summary": "Get product records report",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The ID's of the product to generate the report for"
          }
        ],
        "responses": {
          "200": {
            "description": "Product records report for the specified product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "product_id": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "string"
                          },
                          "records_count": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "product_id",
                          "description",
                          "records_count"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/productRecords": {
      "post": {
        "summary": "Create a new product record",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "last_update_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "purchase_price": {
                    "type": "number"
                  },
                  "sale_price": {
                    "type": "number"
                  },
                  "product_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "last_update_date",
                  "purchase_price",
                  "sale_price",
                  "product_id"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/employees": {
      "get": {
        "summary": "Get all employees",
        "responses": {
          "200": {
            "description": "A list of employees",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Employee"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new employee",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "card_number_id": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "warehouse_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "card_number_id",
                  "first_name",
                  "last_name",
                  "warehouse_id"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Employee created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Employee"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/employees/{id}": {
      "get": {
        "summary": "Get an employee by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Employee details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Employee"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Employee not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an employee by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Employee deleted",
            "content": {}
          },
          "404": {
            "description": "Employee not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Partially update an employee by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "card_number_id": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "warehouse_id": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Employee"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Employee not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/employees/reportInboundOrders": {
      "get": {
        "summary": "Get inbound orders report by employee",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The ID's of the employee to generate the report for"
          }
        ],
        "responses": {
          "200": {
            "description": "Inbound orders report for the specified employee",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "card_number_id": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "warehouse_id": {
                        "type": "integer"
                      },
                      "inbound_orders_count": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "id",
                      "card_number_id",
                      "first_name",
                      "last_name",
                      "warehouse_id",
                      "inbound_orders_count"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Employee not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/buyers": {
      "get": {
        "summary": "Get all buyers",
        "responses": {
          "200": {
            "description": "A list of buyers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Buyer"
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new buyer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "card_number_id": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  }
                },
                "required": [
                  "card_number_id",
                  "first_name",
                  "last_name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Buyer created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Buyer"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/buyers/{id}": {
      "get": {
        "summary": "Get a buyer by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Buyer details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Buyer"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Buyer not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a buyer by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Buyer deleted",
            "content": {}
          },
          "404": {
            "description": "Buyer not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Partially update a buyer by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "card_number_id": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Buyer updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Buyer"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Buyer not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/buyers/reportPurchaseOrders": {
      "get": {
        "summary": "Get purchase orders report by buyer",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The ID's of the buyer to generate the report for"
          }
        ],
        "responses": {
          "200": {
            "description": "Purchase orders report for the specified buyer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "card_number_id": {
                        "type": "string"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      },
                      "purchase_orders_count": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "id",
                      "card_number_id",
                      "first_name",
                      "last_name",
                      "purchase_orders_count"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Buyer not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/localities": {
      "post": {
        "summary": "Create a new locality",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "locality_name": {
                    "type": "string"
                  },
                  "province_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "locality_name",
                  "province_id"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Locality created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "locality_name": {
                          "type": "string"
                        },
                        "province_id": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "id",
                        "locality_name",
                        "province_id"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/localities/reportSellers": {
      "get": {
        "summary": "Get sellers report by locality",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The ID's of the locality to generate the report for"
          }
        ],
        "responses": {
          "200": {
            "description": "Sellers report for the specified locality",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "locality_id": {
                            "type": "integer"
                          },
                          "locality_name": {
                            "type": "string"
                          },
                          "sellers_count": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "locality_id",
                          "locality_name",
                          "sellers_count"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Locality not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/localities/reportCarriers": {
      "get": {
        "summary": "Get carriers report by locality",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The ID's of the locality to generate the report for"
          }
        ],
        "responses": {
          "200": {
            "description": "Carriers report for the specified locality",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "locality_id": {
                            "type": "integer"
                          },
                          "locality_name": {
                            "type": "string"
                          },
                          "carriers_count": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "locality_id",
                          "locality_name",
                          "carriers_count"
                        ]
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Locality not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/carriers": {
      "post": {
        "summary": "Create a new carrier",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cid": {
                    "type": "string"
                  },
                  "company_name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "telephone": {
                    "type": "string"
                  },
                  "locality_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "cid",
                  "company_name",
                  "address",
                  "telephone",
                  "locality_id"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Carrier created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "cid": {
                          "type": "string"
                        },
                        "company_name": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"
                        },
                        "telephone": {
                          "type": "string"
                        },
                        "locality_id": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "cid",
                        "company_name",
                        "address",
                        "telephone",
                        "locality_id"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/productBatches": {
      "post": {
        "summary": "Create a new product batch",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "batch_number": {
                    "type": "integer"
                  },
                  "current_quantity": {
                    "type": "integer"
                  },
                  "current_temperature": {
                    "type": "integer"
                  },
                  "due_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "initial_quantity": {
                    "type": "integer"
                  },
                  "manufacturing_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "manufacturing_hour": {
                    "type": "integer"
                  },
                  "minumum_temperature": {
                    "type": "integer"
                  },
                  "product_id": {
                    "type": "integer"
                  },
                  "section_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "batch_number",
                  "current_quantity",
                  "current_temperature",
                  "due_date",
                  "initial_quantity",
                  "manufacturing_date",
                  "manufacturing_hour",
                  "minumum_temperature",
                  "product_id",
                  "section_id"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product batch created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "batch_number": {
                          "type": "integer"
                        },
                        "current_quantity": {
                          "type": "integer"
                        },
                        "current_temperature": {
                          "type": "integer"
                        },
                        "due_date": {
                          "type": "string",
                          "format": "date"
                        },
                        "initial_quantity": {
                          "type": "integer"
                        },
                        "manufacturing_date": {
                          "type": "string",
                          "format": "date"
                        },
                        "manufacturing_hour": {
                          "type": "integer"
                        },
                        "minumum_temperature": {
                          "type": "integer"
                        },
                        "product_id": {
                          "type": "integer"
                        },
                        "section_id": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "batch_number",
                        "current_quantity",
                        "current_temperature",
                        "due_date",
                        "initial_quantity",
                        "manufacturing_date",
                        "manufacturing_hour",
                        "minumum_temperature",
                        "product_id",
                        "section_id"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/inboundOrders": {
      "post": {
        "summary": "Create a new inbound order",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "order_number": {
                    "type": "string"
                  },
                  "employee_id": {
                    "type": "integer"
                  },
                  "product_batch_id": {
                    "type": "integer"
                  },
                  "warehouse_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "order_date",
                  "order_number",
                  "employee_id",
                  "product_batch_id",
                  "warehouse_id"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Inbound order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/purchaseOrders": {
      "post": {
        "summary": "Create a new purchase order",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "order_number": {
                    "type": "string"
                  },
                  "order_date": {
                    "type": "string",
                    "format": "date"
                  },
                  "tracking_code": {
                    "type": "string"
                  },
                  "buyer_id": {
                    "type": "integer"
                  },
                  "product_record_id": {
                    "type": "integer"
                  }
                },
                "required": [
                  "order_number",
                  "order_date",
                  "tracking_code",
                  "buyer_id",
                  "product_record_id"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Purchase order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseData"
                }
              }
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  }
}